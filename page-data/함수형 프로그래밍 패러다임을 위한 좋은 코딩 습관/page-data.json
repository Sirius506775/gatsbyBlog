{"componentChunkName":"component---src-templates-blog-post-js","path":"/함수형 프로그래밍 패러다임을 위한 좋은 코딩 습관/","result":{"data":{"site":{"siteMetadata":{"title":"DoneHeon's Develog"}},"markdownRemark":{"id":"be5a7733-6a28-5f93-9838-7df5747d1d65","excerpt":"- let보다는 가급적 const를 사용 함수형 프로그래밍의 시작은 불변성 유지이다.\nlet사용을 줄이고 const로 개발하는 습관을 권장한다.\n수정된 값이 필요할 때에는 새로운 변수를 만드는 것이 용이하다. Do Not This: Do This: - Array, Date…","html":"<h4>- let보다는 가급적 const를 사용</h4>\n<p>함수형 프로그래밍의 시작은 불변성 유지이다.\nlet사용을 줄이고 const로 개발하는 습관을 권장한다.\n수정된 값이 필요할 때에는 새로운 변수를 만드는 것이 용이하다.</p>\n<p>Do Not This:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token operator\">...</span>\nfoo <span class=\"token operator\">=</span> <span class=\"token function\">somthing</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Do This:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> new_foo <span class=\"token operator\">=</span> <span class=\"token function\">somthing</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>- Array, Date의 Mutaion Method를 가급적 지양</h4>\n<p>push, pop, shift, sort, reverse 등 객체를 변하는 Method를 가급적 spread operator로 대체하거나 값을 복사해서 사용 권장!!</p>\n<p>Do Not This:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> date<span class=\"token operator\">:</span>Date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  date<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Do This:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> date<span class=\"token operator\">:</span>Date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> new_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> sorted_new_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>new_arr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> new_date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>new_arr<span class=\"token punctuation\">,</span> new_date<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>- 가급적 Object의 필드에 대입 연산자 사용 지양</h4>\n<p>** 가급적' 이라는 의미를 잘 생각하고 값을 변경할 때에는 항상 scope에 대해 생각하며 코딩**</p>\n<p>본말을 전도해서 극단적으로 let을 쓰지 않고 Array push를 쓰지 않고 Object의 값을 변경할때 항상 복사 x</p>\n<p>값을 변경할때 변수가 선언된 위치에서 부터 3~7줄 범위내에서 수정되며 선언된 함수의 scope를 벗어나지 않는 값이라면 복사해서 값을 옮기는 행위는 리소스 낭비이다..</p>\n<p>Do Not This:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>obj<span class=\"token operator\">:</span>Object<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  obj<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Do This:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>obj<span class=\"token operator\">:</span>Object<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>obj<span class=\"token punctuation\">,</span> foo<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>- pure function과 effect를 확실하게 구분해서 작성</h4>\n<p>일부만 Pure하면 Pure한게 아니다. 예를 들어 const와 spread operator를 통해서 불변성을 지키는듯 보이는 코드들 안에 부수효과를 유발하는 코드가 있다면 pure하지 않은 것이다. 분리할 수 있는 방법을 고민하라. pure function은 크지 않아도 좋다.</p>\n<h4>- 그래도 요구사항대로 구현해서 코드가 작동하는게 제일이다!</h4>\n<p>위javascript는 멀티 패러다임 랭귀지이기에 함수형을 쓰던 객체지향으로 개발하던 잘 돌아가기만 한다면 일단 OK</p>\n<p>차츰차츰 각 영역의 좋은점만 찾아서 영리하게 잘 이용할 수 있어야함</p>\n<p>=>>>>></p>\n<p>** 본질을 잊지말자 **</p>\n<p>우리가 함수형 프로그래밍을 해야 하는 이유는 <strong>깔끔하고 예측가능하며 테스트 하기 쉽고 안전한 코드</strong>를 만들기 위해서이며<br>\njavascript가 태생이 <strong>완전한 객체지향도 완전한 함수형도 아닌 밸런스를 가지고 있는 언어</strong>이기 때문이다. !!</p>","frontmatter":{"title":"함수형 프로그래밍 패러다임을 위한 좋은 코딩 습관","date":"December 21, 2022","description":"함수형 프로그래밍의 시작은 불변성 유지이다. let사용을 줄이고 const로 개발하는 습관을 권장한다. 수정된 값이 필요할 때에는 새로운 변수를 만드는 것이 용이하다."}},"previous":null,"next":{"fields":{"slug":"/Pure Function(순수 함수)/"},"frontmatter":{"title":"Pure Function"}}},"pageContext":{"id":"be5a7733-6a28-5f93-9838-7df5747d1d65","previousPostId":null,"nextPostId":"1307ab99-40c4-5eb9-8354-b6672faf463f"}},"staticQueryHashes":["3257411868","3589320610"],"slicesMap":{}}