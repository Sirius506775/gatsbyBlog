{"version":3,"file":"component---src-templates-blog-post-js-50e87b32b2051085f95b.js","mappings":"2PAEe,SAASA,IACtB,MAAMC,EAAaC,EAAAA,OAAOC,eAAgB,KAa1C,OAXAC,EAAAA,EAAAA,YAAU,KAAO,IAAD,EACd,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAQ,EACjBH,EAASI,IAAM,gCACfJ,EAASK,aAAa,OAAQ,gCAC9BL,EAASK,aAAa,aAAc,YACpCL,EAASK,aAAa,QAAS,gBAC/BL,EAASK,aAAa,cAAe,aACnB,QAAlB,EAAAT,EAAWU,eAAO,OAAlB,EAAoBC,YAAYP,EAAS,GACxC,IAGD,+BACE,2BAAKQ,IAAKZ,IAGhB,CCbA,MA0Daa,EAAO,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,MAnEyB,IAGnB,UAFJN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEC,EAAMR,eAAgBC,GAAM,SACpDQ,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjB,EAAmBT,QAAK,QAE1C,OACE,gBAAC,IAAM,CAACO,SAAUA,EAAUP,MAAOQ,GACjC,2BACEE,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYd,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYa,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,2BAEA,gBAAC/B,EAAO,CAACoC,KAAK,+BAA+BC,MAAM,iBACnD,8BACE,gBAAC,IAAG,QAGR,uBAAKT,UAAU,iBACb,sBACEU,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,0BACGrB,GACC,gBAAC,EAAAsB,KAAI,CAACC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAAM,KACrC1B,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAqB,KAAI,CAACC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKJ,YAAYD,MAAK,SAM1B,C","sources":["webpack://gatsby-starter-blog/./src/components/comment.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nexport default function Comment() {\r\n  const commentsEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const scriptEl = document.createElement(\"script\");\r\n    scriptEl.async = true;\r\n    scriptEl.src = \"https://utteranc.es/client.js\";\r\n    scriptEl.setAttribute(\"repo\", \"sancy1003/chanstory-comments\");\r\n    scriptEl.setAttribute(\"issue-term\", \"pathname\");\r\n    scriptEl.setAttribute(\"theme\", \"github-light\");\r\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\r\n    commentsEl.current?.appendChild(scriptEl);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={commentsEl} />\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Comment from \"../components/comment\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        \r\n        <Comment repo=\"sirius506775/blog_utterances\" theme='github-light' />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Comment","commentsEl","useRef","HTMLDivElement","useEffect","scriptEl","document","createElement","async","src","setAttribute","current","appendChild","ref","Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","repo","theme","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}